version: "3.8"
services:
  user:
    build: ./user
    container_name: service-user
    working_dir: /var/www/
    volumes:
      - ./user:/var/www
      - ./user/vendor:/var/www/vendor
    networks:
      - app-network

  car:
    build: ./car
    container_name: service-car
    working_dir: /var/www
    volumes:
      - ./car:/var/www
    environment:
      FLASK_DEBUG: True
    networks:
      - app-network

  proxy:
    build: ./proxy
    container_name: service-proxy
    working_dir: /var/www/
    volumes:
      - ./proxy:/var/www
    networks:
      - app-network
    ports:
      - 8000:8000

  # MySQL database service
  db:
    platform: linux/x86_64
    image: mysql:5.7
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: lesson
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    volumes:
      - user_db:/var/lib/mysql
    networks:
      - app-network

  # Nginx service
  nginx:
    image: nginx:alpine
    container_name: php-nginx
    volumes:
      - ./user:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
    networks:
      - app-network
  
  vitrine:
    build:
      context: ./
      dockerfile: ./vitrine/Dockerfile
    volumes:
      - ./vitrine:/app/vitrine
      - ./vitrine/node_modules:/app/vitrine/node_modules
    ports:
      - 3000:3000
    networks:
      - app-network
  
  storybook:
    build:
      context: ./
      dockerfile: ./my-lib-ui/Dockerfile
    volumes:
      - ./my-lib-ui:/app/my-lib-ui
      - ./my-lib-ui/node_modules:/app/my-lib-ui/node_modules
    ports:
      - 6006:6006

networks:
  app-network:
    driver: bridge

volumes:
  user_db: